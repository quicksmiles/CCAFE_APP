
# see https://docs.posit.co/shiny-server/ for details on this file

run_as shiny;

server {
  listen 3838;

  # serving from the app's path under the server's root
  location /ccafe/ {

    # host just molevolvr in this shiny server instance
    app_dir /srv/shiny-server/app;

    # log all Shiny output to files in this directory
    log_dir /var/log/shiny-server;

    # don't show directory indices
    directory_index off;

    # the app takes a while to boot, so this init timeout is quite generous
    app_init_timeout 600;

    # so, because pro is no longer offered, simple_scheduler is the only
    # remaining option. the argument is the number of "seats" for concurrent
    # users who can be interacting with the app. do note that the server is
    # single-process, single-thread, so if the app's server function is still
    # running for one user everyone else has to wait.
    # it's still quite unclear to me how shiny server decides that a seat is
    # vacant, but it seems to be related to multiple timeout config options
    # (e.g., )
    simple_scheduler 300;

    # it's unclear from the docs, but i believe this is the amount of time in
    # seconds after which the app process is killed, and would have to be
    # restarted if a user were to attempt to access it. since we're only hosting
    # one app, it has a long boot time, and we're not hurting for resources
    # otherwise, i've set this to 0 to disable it and leave the app running all
    # the time.
    app_idle_timeout 0;
  }
}
